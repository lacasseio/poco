model {
	repositories {
		libs(PrebuiltLibraries) {
			mysql {
				def mysqlHome
				if (targetPlatform == 'win32') {
					mysqlHome = $mysql32Home
				} else
				if (targetPlatform == 'win64') {
					mysqlHome = $mysql64Home
				}
				headers.srcDir "$mysqlHome/include"

				binaries.withType(StaticLibraryBinary) {
					def libName = "foobar"
					if (buildType == buildTypes.debug) {
						if (targetPlatform == 'win32') {
							libName = 'libmysqld.lib'
							staticLibraryFile = file("$mysqlHome/lib/$libName")
						} else
						if (targetPlatform == 'win64') {
							libName = 'libmysqld.lib'
							staticLibraryFile = file("$mysqlHome/lib/$libName")
						}
					} else
					if (buildType == buildTypes.release) {
						if (targetPlatform == 'win32') {
							libName = 'libmysql.lib'
							staticLibraryFile = file("$mysqlHome/lib/$libName")
						} else
						if (targetPlatform == 'win64') {
							libName = 'libmysql.lib'
							staticLibraryFile = file("$mysqlHome/lib/$libName")
						}
					} else {
						throw new GradleException("Unknown buildType" + buildType)
					}
				}
				binaries.withType(SharedLibraryBinary) {
					def dllName
					def linkName
					if (buildType == buildTypes.debug) {
						if (targetPlatform == 'win32') {
							dllName = 'libmysqld.dll'
							linkName = 'libmysqld.lib'
							sharedLibraryFile     = file("$mysqlHome/lib/$dllName")
							sharedLibraryLinkFile = file("$mysqlHome/lib/$linkName")
						} else
						if (targetPlatform == 'win64') {
							dllName = 'libmysqld.dll'
							linkName = 'libmysqld.lib'
							sharedLibraryFile     = file("$mysqlHome/lib/$dllName")
							sharedLibraryLinkFile = file("$mysqlHome/lib/$linkName")
						}
					} else
					if (buildType == buildTypes.release) {
						if (targetPlatform == 'win32') {
							dllName = 'libmysql.dll'
							linkName = 'libmysql.lib'
							sharedLibraryFile     = file("$mysqlHome/lib/$dllName")
							sharedLibraryLinkFile = file("$mysqlHome/lib/$linkName")
						} else
						if (targetPlatform == 'win64') {
							dllName = 'libmysql.dll'
							linkName = 'libmysql.lib'
							sharedLibraryFile     = file("$mysqlHome/lib/$dllName")
							sharedLibraryLinkFile = file("$mysqlHome/lib/$linkName")
						}
					} else {
						throw new GradleException("Unknown buildType" + buildType)
					}
				}
			}
		}
	}
	components {
		DataMySQL(NativeLibrarySpec) {
			sources {
				cpp {
					source {
						srcDir 'src'
						include '**/*.cpp'
					}
					exportedHeaders {
						srcDir 'include'
					}
					lib library: 'mysql', linkage: 'static'
				}
			}
		}
	}
	binaries {
		all {
			if (toolChain in VisualCpp) {
				cppCompiler.define	"THREADSAFE"
				cppCompiler.define 	"__LCC__"	
			}
		}
		withType(SharedLibraryBinarySpec) {
			lib project: ':Data', library: 'Data', linkage: 'shared'
			lib project: ':Foundation', library: 'Foundation', linkage: 'shared'
			if (toolChain in VisualCpp) {
				cppCompiler.define	"THREADSAFE"
				cppCompiler.define 	"__LCC__"	
				cppCompiler.define	"MySQL_EXPORTS"
			}
		}
		withType(StaticLibraryBinarySpec) {
			lib project: ':Data', library: 'Data', linkage: 'static'
			lib project: ':Foundation', library: 'Foundation', linkage: 'static'
		}
	}
}


